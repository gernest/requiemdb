// @generated by protobuf-ts 2.9.1 with parameter generate_dependencies,optimize_code_size,long_type_number
// @generated from protobuf file "rq/v1/scan.proto" (package "v1", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
import { TracesData } from "./trace";
import { LogsData } from "./logs";
import { MetricsData } from "./metrics";
import { Timestamp } from "./timestamp";
/**
 * @generated from protobuf message v1.Scan
 */
export interface Scan {
    /**
     * @generated from protobuf field: v1.Scan.SCOPE scope = 1;
     */
    scope: Scan_SCOPE;
    /**
     * @generated from protobuf field: v1.Scan.TimeRange time_range = 2;
     */
    timeRange?: Scan_TimeRange;
    /**
     * @generated from protobuf field: repeated v1.Scan.Filter filters = 3;
     */
    filters: Scan_Filter[];
    /**
     * Number of samples to process. Defauluts to no limit.
     *
     * @generated from protobuf field: uint64 limit = 4;
     */
    limit: number;
    /**
     * Scans in reverse order, with latest samples comming first.  To get the
     * latest sample you can set reverse to true and limit 1.
     *
     * @generated from protobuf field: bool reverse = 5;
     */
    reverse: boolean;
}
/**
 * @generated from protobuf message v1.Scan.Filter
 */
export interface Scan_Filter {
    /**
     * @generated from protobuf oneof: value
     */
    value: {
        oneofKind: "base";
        /**
         * @generated from protobuf field: v1.Scan.BaseFilter base = 1;
         */
        base: Scan_BaseFilter;
    } | {
        oneofKind: "attr";
        /**
         * @generated from protobuf field: v1.Scan.AttrFilter attr = 2;
         */
        attr: Scan_AttrFilter;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message v1.Scan.BaseFilter
 */
export interface Scan_BaseFilter {
    /**
     * @generated from protobuf field: v1.Scan.BaseProp prop = 1;
     */
    prop: Scan_BaseProp;
    /**
     * @generated from protobuf field: string value = 2;
     */
    value: string;
}
/**
 * @generated from protobuf message v1.Scan.AttrFilter
 */
export interface Scan_AttrFilter {
    /**
     * @generated from protobuf field: v1.Scan.AttributeProp prop = 1;
     */
    prop: Scan_AttributeProp;
    /**
     * @generated from protobuf field: string key = 2;
     */
    key: string;
    /**
     * @generated from protobuf field: string value = 3;
     */
    value: string;
}
/**
 * @generated from protobuf message v1.Scan.TimeRange
 */
export interface Scan_TimeRange {
    /**
     * @generated from protobuf field: google.protobuf.Timestamp start = 1;
     */
    start?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp end = 2;
     */
    end?: Timestamp;
}
/**
 * @generated from protobuf enum v1.Scan.SCOPE
 */
export enum Scan_SCOPE {
    /**
     * @generated from protobuf enum value: METRICS = 0;
     */
    METRICS = 0,
    /**
     * @generated from protobuf enum value: TRACES = 2;
     */
    TRACES = 2,
    /**
     * @generated from protobuf enum value: LOGS = 3;
     */
    LOGS = 3,
    /**
     * @generated from protobuf enum value: SNIPPETS = 4;
     */
    SNIPPETS = 4
}
/**
 * @generated from protobuf enum v1.Scan.BaseProp
 */
export enum Scan_BaseProp {
    /**
     * @generated from protobuf enum value: RESOURCE_SCHEMA = 0;
     */
    RESOURCE_SCHEMA = 0,
    /**
     * @generated from protobuf enum value: SCOPE_SCHEMA = 2;
     */
    SCOPE_SCHEMA = 2,
    /**
     * @generated from protobuf enum value: SCOPE_NAME = 3;
     */
    SCOPE_NAME = 3,
    /**
     * @generated from protobuf enum value: SCOPE_VERSION = 4;
     */
    SCOPE_VERSION = 4,
    /**
     * @generated from protobuf enum value: NAME = 6;
     */
    NAME = 6,
    /**
     * @generated from protobuf enum value: TRACE_ID = 8;
     */
    TRACE_ID = 8,
    /**
     * @generated from protobuf enum value: SPAN_ID = 9;
     */
    SPAN_ID = 9,
    /**
     * @generated from protobuf enum value: PARENT_SPAN_ID = 10;
     */
    PARENT_SPAN_ID = 10,
    /**
     * @generated from protobuf enum value: LOGS_LEVEL = 11;
     */
    LOGS_LEVEL = 11
}
/**
 * @generated from protobuf enum v1.Scan.AttributeProp
 */
export enum Scan_AttributeProp {
    /**
     * @generated from protobuf enum value: UNKOWN_ATTR = 0;
     */
    UNKOWN_ATTR = 0,
    /**
     * @generated from protobuf enum value: RESOURCE_ATTRIBUTES = 1;
     */
    RESOURCE_ATTRIBUTES = 1,
    /**
     * @generated from protobuf enum value: SCOPE_ATTRIBUTES = 5;
     */
    SCOPE_ATTRIBUTES = 5,
    /**
     * @generated from protobuf enum value: ATTRIBUTES = 7;
     */
    ATTRIBUTES = 7
}
/**
 * @generated from protobuf message v1.Data
 */
export interface Data {
    /**
     * @generated from protobuf oneof: data
     */
    data: {
        oneofKind: "metrics";
        /**
         * @generated from protobuf field: opentelemetry.proto.metrics.v1.MetricsData metrics = 1;
         */
        metrics: MetricsData;
    } | {
        oneofKind: "logs";
        /**
         * @generated from protobuf field: opentelemetry.proto.logs.v1.LogsData logs = 2;
         */
        logs: LogsData;
    } | {
        oneofKind: "trace";
        /**
         * @generated from protobuf field: opentelemetry.proto.trace.v1.TracesData trace = 3;
         */
        trace: TracesData;
    } | {
        oneofKind: undefined;
    };
}
// @generated message type with reflection information, may provide speed optimized methods
class Scan$Type extends MessageType<Scan> {
    constructor() {
        super("v1.Scan", [
            { no: 1, name: "scope", kind: "enum", T: () => ["v1.Scan.SCOPE", Scan_SCOPE] },
            { no: 2, name: "time_range", kind: "message", T: () => Scan_TimeRange },
            { no: 3, name: "filters", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Scan_Filter },
            { no: 4, name: "limit", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 5, name: "reverse", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message v1.Scan
 */
export const Scan = new Scan$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Scan_Filter$Type extends MessageType<Scan_Filter> {
    constructor() {
        super("v1.Scan.Filter", [
            { no: 1, name: "base", kind: "message", oneof: "value", T: () => Scan_BaseFilter },
            { no: 2, name: "attr", kind: "message", oneof: "value", T: () => Scan_AttrFilter }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message v1.Scan.Filter
 */
export const Scan_Filter = new Scan_Filter$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Scan_BaseFilter$Type extends MessageType<Scan_BaseFilter> {
    constructor() {
        super("v1.Scan.BaseFilter", [
            { no: 1, name: "prop", kind: "enum", T: () => ["v1.Scan.BaseProp", Scan_BaseProp] },
            { no: 2, name: "value", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message v1.Scan.BaseFilter
 */
export const Scan_BaseFilter = new Scan_BaseFilter$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Scan_AttrFilter$Type extends MessageType<Scan_AttrFilter> {
    constructor() {
        super("v1.Scan.AttrFilter", [
            { no: 1, name: "prop", kind: "enum", T: () => ["v1.Scan.AttributeProp", Scan_AttributeProp] },
            { no: 2, name: "key", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "value", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message v1.Scan.AttrFilter
 */
export const Scan_AttrFilter = new Scan_AttrFilter$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Scan_TimeRange$Type extends MessageType<Scan_TimeRange> {
    constructor() {
        super("v1.Scan.TimeRange", [
            { no: 1, name: "start", kind: "message", T: () => Timestamp },
            { no: 2, name: "end", kind: "message", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message v1.Scan.TimeRange
 */
export const Scan_TimeRange = new Scan_TimeRange$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Data$Type extends MessageType<Data> {
    constructor() {
        super("v1.Data", [
            { no: 1, name: "metrics", kind: "message", oneof: "data", T: () => MetricsData },
            { no: 2, name: "logs", kind: "message", oneof: "data", T: () => LogsData },
            { no: 3, name: "trace", kind: "message", oneof: "data", T: () => TracesData }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message v1.Data
 */
export const Data = new Data$Type();
