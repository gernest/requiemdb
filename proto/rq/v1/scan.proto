syntax = "proto3";
package v1;
import "google/protobuf/timestamp.proto";
import "opentelemetry/proto/metrics/v1/metrics.proto";
import "opentelemetry/proto/logs/v1/logs.proto";
import "opentelemetry/proto/trace/v1/trace.proto";

message Scan {
  SCOPE scope = 1;
  TimeRange time_range = 2;
  repeated Filter filters = 3;
  // Number of samples to process. Defauluts to no limit.
  uint64 limit = 4;

  // Scans in reverse order, with latest samples comming first.  To get the
  // latest sample you can set reverse to true and limit 1.
  bool reverse = 5;

  enum SCOPE {
    METRICS = 0;
    TRACES = 2;
    LOGS = 3;
    SNIPPETS = 4;
  }

  enum BaseProp {
    RESOURCE_SCHEMA = 0;
    SCOPE_SCHEMA = 2;
    SCOPE_NAME = 3;
    SCOPE_VERSION = 4;
    NAME = 6;
    TRACE_ID = 8;
    SPAN_ID = 9;
    PARENT_SPAN_ID = 10;
    LOGS_LEVEL = 11;
  }

  enum AttributeProp {
    UNKOWN_ATTR = 0;
    RESOURCE_ATTRIBUTES = 1;
    SCOPE_ATTRIBUTES = 5;
    ATTRIBUTES = 7;
  }

  message Filter {
    oneof value {
      BaseFilter base = 1;
      AttrFilter attr = 2;
    }
  }

  message BaseFilter {
    BaseProp prop = 1;
    string value = 2;
  }

  message AttrFilter {
    AttributeProp prop = 1;
    string key = 2;
    string value = 3;
  }

  message TimeRange {
    google.protobuf.Timestamp start = 1;
    google.protobuf.Timestamp end = 2;
  }
}

message Data {
  oneof data {
    opentelemetry.proto.metrics.v1.MetricsData metrics = 1;
    opentelemetry.proto.logs.v1.LogsData logs = 2;
    opentelemetry.proto.trace.v1.TracesData trace = 3;
  }
}