syntax = "proto3";
package v1;
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "buf/validate/validate.proto";
import "opentelemetry/proto/common/v1/common.proto";
import "opentelemetry/proto/metrics/v1/metrics.proto";
import "opentelemetry/proto/logs/v1/logs.proto";
import "opentelemetry/proto/trace/v1/trace.proto";

service RQ {
  rpc Query(QueryRequest) returns (QueryResponse) {
    option (google.api.http) = {
      post : "/api/v1/query",
      body : "*"
    };
  };
  rpc UploadSnippet(UploadSnippetRequest) returns (UploadSnippetResponse) {
    option (google.api.http) = {
      post : "/api/v1/upload",
      body : "*"
    };
  };
  rpc ListSnippets(ListStippetsRequest) returns (ListSnippetsResponse) {
    option (google.api.http) = {
      get : "/api/v1/list",
    };
  };
  rpc GetSnippet(GetSnippetRequest) returns (GetSnippetResponse) {
    option (google.api.http) = {
      get : "/api/v1/snippet/{name}",
    };
  };
}

message GetSnippetRequest { string name = 1; }

message GetSnippetResponse {
  string name = 1;
  string description = 2;
  bytes raw = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
}

message ListStippetsRequest {}

message ListSnippetsResponse { repeated SnippetInfo snippets = 1; }

message SnippetInfo {
  string name = 1;
  string description = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
}

message UploadSnippetRequest {
  string name = 1;
  bytes data = 2;
}

message UploadSnippetResponse {}

message QueryRequest {
  oneof request {
    // Name of existing snippet.
    string script_name = 1;

    // This will be compiled and executed, It is not recommended. We cache for
    // faster execution .
    //
    // Useful when experimenting.
    bytes script_data = 2;
  }
  // when true any logs associated with script execution will be included in the
  // response.
  bool include_logs = 3;

  google.protobuf.Timestamp start_date = 4;
  google.protobuf.Timestamp end_date = 5;
}

message QueryResponse {
  Result value = 1;
  Timings timings = 2;
  // Number of samples processed by the query snippet.
}

message Timings {
  // Time taken to compile the query snippet before evealuation.
  google.protobuf.Duration compiling = 1;
  // Time taken to evaluate compiled query.
  google.protobuf.Duration evaluating = 2;
}

message Result {}
