syntax = "proto3";
package v1;

import "opentelemetry/proto/metrics/v1/metrics.proto";
import "opentelemetry/proto/logs/v1/logs.proto";
import "opentelemetry/proto/trace/v1/trace.proto";

enum PREFIX {
  RESOURCE_SCHEMA = 0;
  RESOURCE_ATTRIBUTES = 1;
  SCOPE_SCHEMA = 2;
  SCOPE_NAME = 3;
  SCOPE_VERSION = 4;
  SCOPE_ATTRIBUTES = 5;
  METRICS_NAME = 6;
  METRICS_ATTRIBUTES = 7;
  SPAN_TRACE_ID = 8;
  SPAN_SPAN_ID = 9;
  SPAN_NAME = 10;
  SPAN_ATTRIBUTES = 11;
  SPAN_PARENT_SPAN_ID = 13;
  LOGS_TRACE_ID = 14;
  LOGS_SPAN_ID = 15;
  LOGS_LEVEL = 16;
  LOGS_ATTRIBUTES = 17;
}

enum SampleKind {
  METRICS = 0;
  TRACES = 2;
  LOGS = 3;
}

message Sample {
  // Serialized Data object, compressed with zstd. We use bytes here because we
  // automatically sore Sample as a arrow.Record.
  bytes data = 1;

  // Minimum timetamp observed in this sample in milliseconds
  uint64 min_ts = 2;

  // Maximum timestamp observed in this sample in milliseconds
  uint64 max_ts = 3;

  // Date in nillisecond in which the sample was taken
  uint64 date = 4;
}

message Data {
  oneof data {
    opentelemetry.proto.metrics.v1.MetricsData metrics = 1;
    opentelemetry.proto.logs.v1.LogsData logs = 2;
    opentelemetry.proto.trace.v1.TracesData traces = 3;
  }
}